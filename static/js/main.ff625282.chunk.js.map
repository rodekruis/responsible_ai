{"version":3,"sources":["navbar/Navbar.js","need/Need.js","fact/Score.js","fact/Report.js","fact/Badge.js","fact/FACT.js","glossary/Glossary.js","feedback/Feedback.js","footer/Footer.js","App.js","index.js"],"names":["Navbar","props","toggle_side_menu","setState","side_menu","state","className","role","aria-label","href","src","alt","width","height","this","aria-expanded","data-target","onClick","aria-hidden","id","to","React","Component","DEBOUNCED_RESIZE","fn","ms","timer","_","clearTimeout","setTimeout","imageMapResize","Need","window","addEventListener","removeEventListener","useMap","name","shape","coords","Score","danger_threshold","success_threshold","score_value","data-tooltip","advice","label","color_class","Report","show_modal","project_name","evaluator_name","project_comments","variable_name","event","update_dict","target","value","toggle_modal","type","placeholder","onChange","update_input_value","create","bind","disabled","doc","setFontSize","text","autoTable","theme","margin","left","startY","columnStyles","0","cellWidth","1","fontStyle","body","timestamp","Date","timestampISOFormat","toISOString","timestampReadableFormat","toLocaleString","calculate_score","questions","halign","headStyles","fillColor","2","3","4","5","head","component","x","y","filter","question","answer","no_answer","length","component_name","addPage","add_answer_summary","question_table","map","push","answer_key","top","add_component_questions","jsPDF","add_title","add_timestamp","add_project_details","add_scores","add_questions","save","render_modal","Badge","badge_url","score","loader","max","ANSWER_KEY","yes","no","idk","FACT","active_component","location","hash","substr","require","item","metric","numerator","fairness","accountability","confidentiality","transparency","reduce","accumulator","current","denominator","component_weight","Math","round","load_fact_score","load_component_scoreboard","load_metric_scoreboard","fact_score","set_active_component","index","updated_questions","change_answer","Object","entries","answer_value","key","load_question","load_scoreboard","load_tabs","answer_summary","load_questions","no_active_component","Glossary","Feedback","Footer","App","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ff625282.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Navbar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            side_menu: \"\",\n        };\n    }\n\n    toggle_side_menu = () => {\n        this.setState({\n            side_menu: this.state.side_menu ? \"\" : \" is-active\",\n        });\n    };\n\n    render() {\n        return (\n            <nav\n                className=\"navbar\"\n                role=\"navigation\"\n                aria-label=\"main navigation\"\n            >\n                <div className=\"navbar-brand\">\n                    <a className=\"navbar-item\" href=\"https://www.510.global/\">\n                        <img\n                            src=\"510-logo.png\"\n                            alt=\"www.510.global\"\n                            width=\"74\"\n                            height=\"24.75\"\n                        />\n                    </a>\n\n                    <span\n                        role=\"button\"\n                        className={\n                            \"navbar-burger burger\" + this.state.side_menu\n                        }\n                        aria-label=\"menu\"\n                        aria-expanded=\"false\"\n                        data-target=\"side-menu\"\n                        onClick={this.toggle_side_menu}\n                    >\n                        <span aria-hidden=\"true\"></span>\n                        <span aria-hidden=\"true\"></span>\n                        <span aria-hidden=\"true\"></span>\n                    </span>\n                </div>\n\n                <div\n                    id=\"side-menu\"\n                    className={\"navbar-menu\" + this.state.side_menu}\n                >\n                    <div className=\"navbar-start\">\n                        <div className=\"navbar-item has-dropdown is-hoverable\">\n                            <span className=\"navbar-link\">\n                                Responsible A.I.\n                            </span>\n\n                            <div className=\"navbar-dropdown\">\n                                <Link className=\"navbar-item\" to=\"/\">\n                                    The Need for Responsible A.I.\n                                </Link>\n                                <Link className=\"navbar-item\" to=\"/fact\">\n                                    Calculate F.A.C.T. Score\n                                </Link>\n                                <Link className=\"navbar-item\" to=\"/glossary\">\n                                    Glossary\n                                </Link>\n                                <hr className=\"navbar-divider\" />\n                                <Link className=\"navbar-item\" to=\"/feedback\">\n                                    Feedback\n                                </Link>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </nav>\n        );\n    }\n}\n","import React from \"react\";\nimport imageMapResize from \"image-map-resizer\";\nimport { Link } from \"react-router-dom\";\n\nconst DEBOUNCED_RESIZE = ((fn, ms) => {\n    let timer;\n    return _ => {\n        clearTimeout(timer);\n        timer = setTimeout(_ => {\n            timer = null;\n            fn();\n        }, ms);\n    };\n})(imageMapResize, 100);\n\nexport default class Need extends React.Component {\n    componentDidMount() {\n        DEBOUNCED_RESIZE();\n        window.addEventListener(\"resize\", DEBOUNCED_RESIZE);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", DEBOUNCED_RESIZE);\n    }\n    render() {\n        return (\n            <div>\n                <section className=\"container has-text-centered\">\n                    <Link\n                        className=\"button is-primary is-outlined is-large is-fullwidth\"\n                        to=\"/fact\"\n                    >\n                        Calculate F.A.C.T. Score\n                    </Link>\n                </section>\n                <section className=\"hero\">\n                    <div className=\"hero-body\">\n                        <div className=\"container\">\n                            <h1 className=\"title\">\n                                The Need for Responsible A.I.\n                            </h1>\n                        </div>\n                    </div>\n                </section>\n                <div className=\"container\">\n                    <img\n                        className=\"blame-image\"\n                        alt=\"Who is to blame when an A.I. decision goes bad?\"\n                        src=\"blame.png\"\n                    />\n                    <div className=\"has-text-centered\">\n                        <a href=\"http://www.drawingsofdogs.co.uk/\">\n                            <small>Image Source: Drawings of Dogs</small>\n                        </a>\n                    </div>\n                    <br />\n                    <p>\n                        Artificial Intelligence or A.I. encompasses a wide range\n                        of fields and methods. Formulating a consistent\n                        definition for A.I. remains evasive yet we attempt to\n                        draw a framework to measure ethical practices. In order\n                        to cast a wide net across the range of A.I. topics and\n                        remain tangible in practical solutions, we rely on high\n                        level abstractions of the involved components.\n                    </p>\n                    <img\n                        className=\"components-image\"\n                        alt=\"Components of an A.I. project - Data, Model and Deploy\"\n                        src=\"components.png\"\n                        useMap=\"#component-image-map\"\n                    />\n                    <map name=\"component-image-map\">\n                        <area\n                            shape=\"rect\"\n                            coords=\"63, 83, 460, 325\"\n                            alt=\"Data\"\n                            href=\"/fact#data\"\n                        />\n                        <area\n                            shape=\"rect\"\n                            coords=\"740, 83, 1135, 325\"\n                            alt=\"Model\"\n                            href=\"/fact#model\"\n                        />\n                        <area\n                            shape=\"rect\"\n                            coords=\"1415, 83, 1810, 325\"\n                            alt=\"Deploy\"\n                            href=\"/fact#deploy\"\n                        />\n                    </map>\n                    <p>\n                        Any system can be modelled using input-process-output\n                        with reasonable encapsulation of the concepts.\n                        Similarly, an A.I. system can be represented using a\n                        data-model-deploy pipeline.\n                    </p>\n                </div>\n            </div>\n        );\n    }\n}\n","import React from \"react\";\n\nconst DEFAULT_DANGER_THRESHOLD = 30;\nconst DEFAULT_SUCCESS_THRESHOLD = 70;\n\nexport default class Score extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            danger_threshold:\n                this.props.danger_threshold || DEFAULT_DANGER_THRESHOLD,\n            success_threshold:\n                this.props.success_threshold || DEFAULT_SUCCESS_THRESHOLD,\n        };\n    }\n\n    color_class() {\n        return this.props.score_value < this.state.danger_threshold\n            ? \"has-text-danger\"\n            : this.props.score_value > this.state.success_threshold\n            ? \"has-text-success\"\n            : \"\";\n    }\n\n    advice() {\n        return this.props.score_value < this.state.danger_threshold\n            ? \"Try to get more 'Yes' answers to improve your score.\"\n            : this.props.score_value > this.state.success_threshold\n            ? \"You're doing great!\"\n            : \"Try to get more 'Yes' answers to improve your score.\";\n    }\n\n    render() {\n        return (\n            <div className=\"level-item has-text-centered\">\n                <div\n                    className=\"has-tooltip-bottom\"\n                    data-tooltip={this.advice()}\n                >\n                    {this.props.label ? (\n                        <p className=\"heading\">{this.props.label}</p>\n                    ) : null}\n                    <p className={\"title \" + this.color_class()}>\n                        {this.props.score_value}%\n                    </p>\n                </div>\n            </div>\n        );\n    }\n}\n","import React from \"react\";\n\nimport * as jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\n\nconst TITLE_FONT_SIZE = 36;\nconst HEADER_FONT_SIZE = 24;\nconst TIMESTAMP_FONT_SIZE = 11;\nconst TEXT_FONT_SIZE = 14;\n\nexport default class Report extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            show_modal: false,\n            project_name: \"\",\n            evaluator_name: \"\",\n            project_comments: \"\",\n        };\n    }\n\n    toggle_modal(show_modal) {\n        this.setState({\n            show_modal: show_modal,\n        });\n    }\n\n    update_input_value(variable_name) {\n        return event => {\n            let update_dict = {};\n            update_dict[variable_name] = event.target.value;\n            this.setState(update_dict);\n        };\n    }\n\n    render_modal() {\n        return (\n            <div\n                className={\n                    \"modal\" + (this.state.show_modal ? \" is-active\" : \"\")\n                }\n            >\n                <div className=\"modal-background\"></div>\n                <div className=\"modal-card\">\n                    <header className=\"modal-card-head\">\n                        <p className=\"modal-card-title\">\n                            Export Responsibility Report\n                        </p>\n                        <button\n                            className=\"delete\"\n                            aria-label=\"close\"\n                            onClick={() => this.toggle_modal(false)}\n                        ></button>\n                    </header>\n                    <section className=\"modal-card-body\">\n                        <div className=\"field\">\n                            <label className=\"label\">\n                                Project Name\n                                <span className=\"has-text-danger\"> *</span>\n                            </label>\n                            <div className=\"control\">\n                                <input\n                                    className=\"input\"\n                                    type=\"text\"\n                                    placeholder=\"e.g Alpha Go\"\n                                    value={this.state.project_name}\n                                    onChange={this.update_input_value(\n                                        \"project_name\"\n                                    )}\n                                />\n                            </div>\n                        </div>\n\n                        <div className=\"field\">\n                            <label className=\"label\">\n                                Evaluator Name\n                                <span className=\"has-text-danger\"> *</span>\n                            </label>\n                            <div className=\"control\">\n                                <input\n                                    className=\"input\"\n                                    type=\"text\"\n                                    placeholder=\"e.g. Lee Sedol\"\n                                    value={this.state.evaluator_name}\n                                    onChange={this.update_input_value(\n                                        \"evaluator_name\"\n                                    )}\n                                />\n                            </div>\n                        </div>\n\n                        <div className=\"field\">\n                            <label className=\"label\">Comments</label>\n                            <div className=\"control\">\n                                <textarea\n                                    className=\"textarea has-fixed-size\"\n                                    placeholder=\"e.g. AlphaGo is a computer program that plays the board game Go.\"\n                                    value={this.state.project_comments}\n                                    onChange={this.update_input_value(\n                                        \"project_comments\"\n                                    )}\n                                ></textarea>\n                            </div>\n                            <p className=\"help\">\n                                <span className=\"has-text-danger\">*</span>{\" \"}\n                                indicates required fields\n                            </p>\n                        </div>\n                    </section>\n                    <footer className=\"modal-card-foot\">\n                        <button\n                            className=\"button is-primary\"\n                            onClick={this.create.bind(this)}\n                            disabled={\n                                !this.state.project_name ||\n                                !this.state.evaluator_name\n                            }\n                        >\n                            <span className=\"icon is-medium has-text-white\">\n                                <i className=\"fas fa-file-download\"></i>\n                            </span>\n                            <span>Download</span>\n                        </button>\n                        <button\n                            className=\"button\"\n                            onClick={() => this.toggle_modal(false)}\n                        >\n                            Cancel\n                        </button>\n                    </footer>\n                </div>\n            </div>\n        );\n    }\n\n    add_title(doc) {\n        doc.setFontSize(TITLE_FONT_SIZE);\n        doc.text(\"Responsible A.I. Report\", 15, 25);\n    }\n\n    add_project_details(doc) {\n        doc.setFontSize(TEXT_FONT_SIZE);\n\n        doc.autoTable({\n            theme: \"grid\",\n            margin: { left: 15 },\n            startY: 50,\n            columnStyles: {\n                0: {\n                    cellWidth: 30,\n                },\n                1: {\n                    fontStyle: \"bold\",\n                },\n            },\n            body: [\n                [\"Project Name\", this.state.project_name],\n                [\"Evaluator Name\", this.state.evaluator_name],\n                [\"Comments\", this.state.project_comments],\n            ],\n        });\n    }\n\n    add_timestamp(doc) {\n        const timestamp = new Date();\n        const timestampISOFormat = timestamp.toISOString();\n        const timestampReadableFormat = timestamp.toLocaleString(\"en-GB\");\n        doc.setFontSize(TIMESTAMP_FONT_SIZE);\n        doc.text(\"Created on: \" + timestampReadableFormat, 17, 35);\n        return timestampISOFormat;\n    }\n\n    add_scores(doc) {\n        doc.setFontSize(HEADER_FONT_SIZE);\n        doc.text(\n            \"F.A.C.T. Score: \" +\n                this.props.calculate_score(null, null, this.props.questions) +\n                \"%\",\n            17,\n            95\n        );\n\n        doc.text(\"Metrics,\", 15, 120);\n        doc.setFontSize(TEXT_FONT_SIZE);\n\n        doc.autoTable({\n            theme: \"grid\",\n            margin: { left: 20 },\n            startY: 130,\n            columnStyles: {\n                0: {\n                    cellWidth: 30,\n                },\n                1: {\n                    fontStyle: \"bold\",\n                    cellWidth: 15,\n                    halign: \"right\",\n                },\n            },\n            body: [\n                [\n                    \"Fairness\",\n                    this.props.calculate_score(\n                        \"fairness\",\n                        null,\n                        this.props.questions\n                    ) + \"%\",\n                ],\n                [\n                    \"Accountability\",\n                    this.props.calculate_score(\n                        \"accountability\",\n                        null,\n                        this.props.questions\n                    ) + \"%\",\n                ],\n                [\n                    \"Confidentiality\",\n                    this.props.calculate_score(\n                        \"confidentiality\",\n                        null,\n                        this.props.questions\n                    ) + \"%\",\n                ],\n                [\n                    \"Transparency\",\n                    this.props.calculate_score(\n                        \"transparency\",\n                        null,\n                        this.props.questions\n                    ) + \"%\",\n                ],\n            ],\n        });\n\n        doc.setFontSize(HEADER_FONT_SIZE);\n        doc.text(\"Components,\", 15, 185);\n        doc.setFontSize(TEXT_FONT_SIZE);\n\n        doc.autoTable({\n            theme: \"grid\",\n            margin: { left: 20 },\n            startY: 195,\n            headStyles: { halign: \"center\", fillColor: [67, 125, 181] },\n            columnStyles: {\n                1: {\n                    fontStyle: \"bold\",\n                    halign: \"center\",\n                },\n                2: {\n                    fontStyle: \"bold\",\n                    halign: \"center\",\n                },\n                3: {\n                    fontStyle: \"bold\",\n                    halign: \"center\",\n                },\n                4: {\n                    fontStyle: \"bold\",\n                    halign: \"center\",\n                },\n                5: {\n                    fontStyle: \"bold\",\n                    halign: \"center\",\n                },\n            },\n            head: [\n                [\n                    \"Component\",\n                    \"F.A.C.T.\",\n                    \"Fairness\",\n                    \"Accountability\",\n                    \"Confidentiality\",\n                    \"Transparency\",\n                ],\n            ],\n            body: [\n                [\n                    \"Data\",\n                    this.props.calculate_score(\n                        null,\n                        \"data\",\n                        this.props.questions\n                    ) + \"%\",\n                    this.props.calculate_score(\n                        \"fairness\",\n                        \"data\",\n                        this.props.questions\n                    ) + \"%\",\n                    this.props.calculate_score(\n                        \"accountability\",\n                        \"data\",\n                        this.props.questions\n                    ) + \"%\",\n                    this.props.calculate_score(\n                        \"confidentiality\",\n                        \"data\",\n                        this.props.questions\n                    ) + \"%\",\n                    this.props.calculate_score(\n                        \"transparency\",\n                        \"data\",\n                        this.props.questions\n                    ) + \"%\",\n                ],\n                [\n                    \"Model\",\n                    this.props.calculate_score(\n                        null,\n                        \"model\",\n                        this.props.questions\n                    ) + \"%\",\n                    this.props.calculate_score(\n                        \"fairness\",\n                        \"model\",\n                        this.props.questions\n                    ) + \"%\",\n                    this.props.calculate_score(\n                        \"accountability\",\n                        \"model\",\n                        this.props.questions\n                    ) + \"%\",\n                    this.props.calculate_score(\n                        \"confidentiality\",\n                        \"model\",\n                        this.props.questions\n                    ) + \"%\",\n                    this.props.calculate_score(\n                        \"transparency\",\n                        \"model\",\n                        this.props.questions\n                    ) + \"%\",\n                ],\n                [\n                    \"Deploy\",\n                    this.props.calculate_score(\n                        null,\n                        \"deploy\",\n                        this.props.questions\n                    ) + \"%\",\n                    this.props.calculate_score(\n                        \"fairness\",\n                        \"deploy\",\n                        this.props.questions\n                    ) + \"%\",\n                    this.props.calculate_score(\n                        \"accountability\",\n                        \"deploy\",\n                        this.props.questions\n                    ) + \"%\",\n                    this.props.calculate_score(\n                        \"confidentiality\",\n                        \"deploy\",\n                        this.props.questions\n                    ) + \"%\",\n                    this.props.calculate_score(\n                        \"transparency\",\n                        \"deploy\",\n                        this.props.questions\n                    ) + \"%\",\n                ],\n            ],\n        });\n    }\n\n    add_answer_summary(doc, component, x, y) {\n        doc.setFontSize(TEXT_FONT_SIZE);\n        doc.text(\n            \"Answered \" +\n                this.props.questions.filter(\n                    question =>\n                        (question.component === component ||\n                            component === null) &&\n                        question.answer !== this.props.no_answer\n                ).length +\n                \" of \" +\n                this.props.questions.filter(\n                    question =>\n                        question.component === component || component === null\n                ).length +\n                \" questions.\",\n            x,\n            y\n        );\n    }\n\n    add_component_questions(doc, questions, component, component_name) {\n        doc.addPage();\n        doc.setFontSize(HEADER_FONT_SIZE);\n        doc.text(component_name, 15, 20);\n        doc.setFontSize(TEXT_FONT_SIZE);\n        this.add_answer_summary(doc, component, 17, 35);\n        let question_table = [];\n        questions\n            .filter(question => {\n                return question.component === component;\n            })\n            .map(question => {\n                question_table.push([\n                    question.question,\n                    this.props.answer_key[question.answer],\n                ]);\n                return question;\n            });\n        const question_table_headers = [[\"Question\", \"Answer\"]];\n        doc.autoTable({\n            margin: { top: 40, left: 15 },\n            head: question_table_headers,\n            body: question_table,\n        });\n    }\n\n    add_questions(doc, questions) {\n        this.add_component_questions(doc, questions, \"data\", \"Data\");\n        this.add_component_questions(doc, questions, \"model\", \"Model\");\n        this.add_component_questions(doc, questions, \"deploy\", \"Deploy\");\n    }\n\n    create() {\n        const doc = new jsPDF();\n        this.add_title(doc);\n        const timestamp = this.add_timestamp(doc);\n        this.add_project_details(doc);\n        this.add_scores(doc);\n        this.add_answer_summary(doc, null, 17, 250);\n        this.add_questions(doc, this.props.questions);\n        doc.save(\"Responsible-AI-Report-\" + timestamp + \".pdf\");\n        this.toggle_modal(false);\n    }\n\n    render() {\n        return (\n            <div className=\"level-item download-report-interaction\">\n                <div\n                    className=\"has-text-centered\"\n                    onClick={() => this.toggle_modal(true)}\n                >\n                    <div>\n                        <p className=\"heading\">Download</p>\n                        <p className=\"title\">\n                            <span className=\"icon\">\n                                <i className=\"fas fa-file-download\"></i>\n                            </span>\n                        </p>\n                    </div>\n                </div>\n\n                {this.render_modal()}\n            </div>\n        );\n    }\n}\n","import React from \"react\";\nimport Img from \"react-image\";\n\nexport default class Badge extends React.Component {\n    render() {\n        const badge_url =\n            \"https://img.shields.io/badge/F.A.C.T.-\" +\n            this.props.score +\n            \"-291AE0.svg?style=flat-square\";\n        return (\n            <div className=\"level-item has-text-centered badge-interaction\">\n                <a className=\"has-text-black\" href={badge_url}>\n                    <p className=\"heading\">Badge</p>\n                    <p className=\"title\">\n                        <Img\n                            src={badge_url}\n                            alt={\"F.A.C.T.: \" + this.props.score}\n                            loader={\n                                <progress\n                                    className=\"progress is-small is-primary\"\n                                    max=\"100\"\n                                >\n                                    15%\n                                </progress>\n                            }\n                        />\n                    </p>\n                </a>\n            </div>\n        );\n    }\n}\n","import React from \"react\";\nimport Score from \"./Score\";\nimport Report from \"./Report\";\nimport Badge from \"./Badge\";\n\nconst DEFAULT_ANSWER = \"idk\";\nconst NO_ANSWER = \"idk\";\n\nconst ANSWER_KEY = {\n    yes: \"Yes\",\n    no: \"No\",\n    idk: \"I don't know\",\n};\n\nexport default class FACT extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            questions: [],\n            active_component: window.location.hash\n                ? window.location.hash.substr(1)\n                : \"data\",\n        };\n    }\n\n    componentDidMount() {\n        this.setState({\n            questions: require(\"../rubric.json\").questions.map(item => {\n                item.answer = DEFAULT_ANSWER;\n                return item;\n            }),\n        });\n    }\n\n    calculate_score(metric, component, questions = this.state.questions) {\n        let numerator = questions\n            .map(question => {\n                const answer_weight = question.answer === \"yes\";\n                const component_weight = component\n                    ? question.component === component\n                    : 1;\n                return (\n                    answer_weight *\n                    component_weight *\n                    // question.weight *\n                    (metric\n                        ? question[metric]\n                        : question.fairness +\n                          question.accountability +\n                          question.confidentiality +\n                          question.transparency)\n                );\n            })\n            .reduce((accumulator, current) => accumulator + current, 0);\n        let denominator = questions\n            .map(question => {\n                const component_weight = component\n                    ? question.component === component\n                    : 1;\n                return Math.max(\n                    0, // question.weight *\n                    component_weight *\n                        (metric\n                            ? question[metric]\n                            : question.fairness +\n                              question.accountability +\n                              question.confidentiality +\n                              question.transparency)\n                );\n            })\n            .reduce((accumulator, current) => accumulator + current, 0);\n        return Math.max(0, Math.round(100 * (numerator / denominator)));\n    }\n\n    load_scoreboard() {\n        return (\n            <div>\n                {this.load_fact_score()}\n                {this.load_component_scoreboard()}\n                {this.load_metric_scoreboard()}\n            </div>\n        );\n    }\n\n    load_fact_score() {\n        const fact_score = this.calculate_score();\n        return (\n            <nav className=\"level\">\n                <div className=\"level-item has-text-centered\">\n                    <div>\n                        <p className=\"title\">F.A.C.T. Score</p>\n                    </div>\n                </div>\n                <Score score_value={fact_score} />\n                <Report\n                    answer_key={ANSWER_KEY}\n                    calculate_score={this.calculate_score}\n                    questions={this.state.questions}\n                    no_answer={NO_ANSWER}\n                />\n                <Badge score={fact_score} />\n            </nav>\n        );\n    }\n\n    load_component_scoreboard() {\n        return (\n            <nav className=\"level\">\n                <Score\n                    label=\"Data\"\n                    score_value={this.calculate_score(null, \"data\")}\n                />\n                <Score\n                    label=\"Model\"\n                    score_value={this.calculate_score(null, \"model\")}\n                />\n                <Score\n                    label=\"Deploy\"\n                    score_value={this.calculate_score(null, \"deploy\")}\n                />\n            </nav>\n        );\n    }\n\n    load_metric_scoreboard(component) {\n        return (\n            <nav className=\"level\">\n                <Score\n                    label=\"Fairness\"\n                    score_value={this.calculate_score(\"fairness\", component)}\n                />\n                <Score\n                    label=\"Accountability\"\n                    score_value={this.calculate_score(\n                        \"accountability\",\n                        component\n                    )}\n                />\n                <Score\n                    label=\"Confidentiality\"\n                    score_value={this.calculate_score(\n                        \"confidentiality\",\n                        component\n                    )}\n                />\n                <Score\n                    label=\"Transparency\"\n                    score_value={this.calculate_score(\n                        \"transparency\",\n                        component\n                    )}\n                />\n            </nav>\n        );\n    }\n\n    set_active_component(component_name) {\n        return () => {\n            this.setState({ active_component: component_name });\n        };\n    }\n\n    load_tabs() {\n        return (\n            <section className=\"section\">\n                <div className=\"tabs is-centered is-boxed is-medium\">\n                    <ul>\n                        <li\n                            className={\n                                this.state.active_component === \"data\"\n                                    ? \"is-active\"\n                                    : \"\"\n                            }\n                        >\n                            <a\n                                href=\"#data\"\n                                onClick={this.set_active_component(\"data\")}\n                            >\n                                <span>Data</span>\n                            </a>\n                        </li>\n                        <li\n                            className={\n                                this.state.active_component === \"model\"\n                                    ? \"is-active\"\n                                    : \"\"\n                            }\n                        >\n                            <a\n                                href=\"#model\"\n                                onClick={this.set_active_component(\"model\")}\n                            >\n                                <span>Model</span>\n                            </a>\n                        </li>\n                        <li\n                            className={\n                                this.state.active_component === \"deploy\"\n                                    ? \"is-active\"\n                                    : \"\"\n                            }\n                        >\n                            <a\n                                href=\"#deploy\"\n                                onClick={this.set_active_component(\"deploy\")}\n                            >\n                                <span>Deploy</span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </section>\n        );\n    }\n\n    change_answer(index) {\n        return event => {\n            let updated_questions = this.state.questions;\n            updated_questions[index].answer = event.target.value;\n            this.setState({\n                questions: updated_questions,\n            });\n        };\n    }\n\n    load_question(item, index) {\n        return (\n            <div\n                className={\n                    \"field is-horizontal\" +\n                    (item.component === this.state.active_component\n                        ? \"\"\n                        : \" is-hidden\")\n                }\n            >\n                <div className=\"field-label is-size-4\">{item.question}</div>\n                <div className=\"field-body\">\n                    <div className=\"select\">\n                        <select\n                            value={item.answer}\n                            onChange={this.change_answer(index)}\n                        >\n                            {Object.entries(ANSWER_KEY).map(\n                                ([answer_key, answer_value]) => {\n                                    return (\n                                        <option\n                                            value={answer_key}\n                                            key={answer_key}\n                                        >\n                                            {answer_value}\n                                        </option>\n                                    );\n                                }\n                            )}\n                        </select>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    load_questions() {\n        return this.state.questions.map((item, index) => {\n            return <div key={index}>{this.load_question(item, index)}</div>;\n        });\n    }\n\n    no_active_component() {\n        return (\n            <div className=\"has-text-centered\">\n                Calculate your F.A.C.T. score by answering a set of simple\n                Yes/No questions. Select any tab to get started.\n            </div>\n        );\n    }\n\n    answer_summary(component) {\n        return (\n            <div className=\"field is-horizontal is-size-4\">\n                <div className=\"field-label\"># Answered</div>\n                <div className=\"field-body\">\n                    {\n                        this.state.questions.filter(\n                            question =>\n                                question.component === component &&\n                                question.answer !== NO_ANSWER\n                        ).length\n                    }\n                    /\n                    {\n                        this.state.questions.filter(\n                            question => question.component === component\n                        ).length\n                    }\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                <section className=\"hero\">\n                    <div className=\"hero-body\">\n                        <div className=\"container\">\n                            <h1 className=\"title\">Calculate F.A.C.T. Score</h1>\n                            <h1 className=\"subtitle\">\n                                Our scores reflect fairness, accountability,\n                                confidentiality and transparency in your A.I.\n                                project.\n                            </h1>\n                        </div>\n                    </div>\n                </section>\n                <div className=\"container\">\n                    {this.load_scoreboard()}\n                    {this.load_tabs()}\n                    {this.state.active_component\n                        ? this.load_metric_scoreboard(\n                              this.state.active_component\n                          )\n                        : null}\n                    {this.answer_summary(this.state.active_component)}\n                    {this.state.active_component\n                        ? this.load_questions()\n                        : this.no_active_component()}\n                </div>\n            </div>\n        );\n    }\n}\n","import React from \"react\";\n\nexport default class Glossary extends React.Component {\n    render() {\n        return (\n            <div>\n                <section className=\"hero\">\n                    <div className=\"hero-body\">\n                        <div className=\"container\">\n                            <h1 className=\"title\">Glossary</h1>\n                            <h1 className=\"subtitle\">\n                                Definitions of terms, phrases and abbreviations\n                                used in our questions.\n                            </h1>\n                        </div>\n                    </div>\n                </section>\n                <div className=\"container\">\n                    <table className=\"table\">\n                        <thead>\n                            <tr>\n                                <th className=\"term-column-header\">TERM</th>\n                                <th>DEFINITION</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>COCO</td>\n                                <td>\n                                    <a href=\"http://cocodataset.org/\">\n                                        Common Objects in Context\n                                    </a>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Fairness</td>\n                                <td>\n                                    Decisions are unbiased to identity features\n                                    such as gender, race, nationality, sexual\n                                    orientation, religion, political opinion,\n                                    skin colour, education, address and age.\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Accountability</td>\n                                <td>\n                                    Decisions should be traceable, reproducible\n                                    and liable. All decisions and their\n                                    consequences must be owned and explained by\n                                    the decision maker or administrator of the\n                                    decision maker.\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Confidentiality</td>\n                                <td>\n                                    Personal information which can be used to\n                                    identify individuals or communities must be\n                                    secure and above intentional or accidental\n                                    misuse.\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Transparency</td>\n                                <td>\n                                    Understanding why a decision is made is key\n                                    to establishing trust in the decision\n                                    process. Accompanying decisions with\n                                    explanations and analysis reports help\n                                    understand the outcome.\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Data</td>\n                                <td>\n                                    Refers to interpretable information in the\n                                    context of the world. Data can be in the\n                                    form of text, numbers, images, audio, video,\n                                    co-ordinates, address, email, phone numbers,\n                                    names, machine logs, journals, sensor\n                                    readings, etc. In our context, data\n                                    encapsulates all text/media/documents\n                                    related to the project and not limited to\n                                    only datasets used for modelling and\n                                    analyses.\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Model</td>\n                                <td>\n                                    Refers to a function or process which uses\n                                    data to draw inferences about the world.\n                                    Models can be statistical, symbolic,\n                                    mathematical, deterministic, stochastic,\n                                    neural networks, flow charts, black-box,\n                                    white-box, decision trees, etc. In our\n                                    context, model represents the world in which\n                                    the decisions are effective and the\n                                    consequences of the decisions have\n                                    repercussions.\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Deploy(ment)</td>\n                                <td>\n                                    Refers to a system which uses the model to\n                                    make inferences on unseen events of the\n                                    world. A deployment can be a script, a\n                                    function in a program, an excel sheet, a web\n                                    application, a decision making system, a\n                                    toolkit, a library package, a form, a\n                                    program, an application, a mobile app, a\n                                    feature in a mobile app, etc. In our\n                                    context, a deployment is an implementation\n                                    of the model which is used to make\n                                    inferences on unseen data. An implementation\n                                    can refer to both online and offline use of\n                                    the model.\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Feature Imbalance</td>\n                                <td>\n                                    When a subset of features in the dataset\n                                    contain most of the useful information to\n                                    represent the datapoint. Also applies to\n                                    range of the feature values.\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Class Imbalance</td>\n                                <td>\n                                    When a subset of the classes are represented\n                                    by most of the datapoints in the dataset.\n                                    Ideally, the training set should\n                                    sufficiently represent the test set.\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Hyper-parameter</td>\n                                <td>\n                                    A parameter that is set before the learning\n                                    process begins. It affects the performance\n                                    of the model.\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Optimal Hyper-parameter</td>\n                                <td>\n                                    A hyper-parameter value which achieves the\n                                    model’s best performance is said to be\n                                    optimal.\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Active Learning</td>\n                                <td>\n                                    A special case of machine learning in which\n                                    a learning algorithm is able to\n                                    interactively query the user to obtain the\n                                    desired outputs at new data points.\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Decision Workflow</td>\n                                <td>\n                                    A subset of the process which only contains\n                                    decision nodes. Applies only to non-trivial\n                                    system where an instance of the process does\n                                    not explore the whole system.\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Dataset</td>\n                                <td>\n                                    A set of datapoints which serve as input and\n                                    labels to a prediction model. The dataset\n                                    includes all datapoints with and without\n                                    corresponding labels. Only the datapoints\n                                    with labels can be used in the training,\n                                    validation and test sets.\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Training Set</td>\n                                <td>\n                                    A subset of the dataset used to teach the\n                                    model about the data. Usually, 80% of the\n                                    labelled dataset.\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Validation Set</td>\n                                <td>\n                                    A subset of the dataset used to tune the\n                                    model with respect to the data. Usually, 10%\n                                    of the labelled dataset.\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Test Set</td>\n                                <td>\n                                    A subset of the dataset used to evaluate the\n                                    model on the data. Usually, 10% of the\n                                    labelled dataset.\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Inference Set</td>\n                                <td>\n                                    All datapoints which are not in the\n                                    training, validation, test sets. These\n                                    datapoints can be with and without\n                                    corresponding labels.\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        );\n    }\n}\n","import React from \"react\";\n\nexport default class Feedback extends React.Component {\n    render() {\n        return (\n            <section className=\"hero\">\n                <div className=\"hero-body\">\n                    <div className=\"container\">\n                        <h1 className=\"title\">\n                            <a href=\"mailto:grahman@rodekruis.nl?subject=Responsible A.I.\">\n                                Email\n                            </a>{\" \"}\n                            us your feedback.\n                        </h1>\n                    </div>\n                </div>\n            </section>\n        );\n    }\n}\n","import React from \"react\";\n\nexport default class Footer extends React.Component {\n    render() {\n        return (\n            <footer className=\"footer\">\n                <div className=\"content has-text-centered\">\n                    <p>\n                        <strong>Responsible A.I.</strong> by{\" \"}\n                        <a href=\"https://www.510.global/\">510.global</a> under\n                        the{\" \"}\n                        <a href=\"https://github.com/gulfaraz/responsible_ai/blob/master/LICENSE\">\n                            GPL-3.0 license\n                        </a>\n                        .\n                    </p>\n                </div>\n            </footer>\n        );\n    }\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./navbar/Navbar\";\nimport Need from \"./need/Need\";\nimport FACT from \"./fact/FACT\";\nimport Glossary from \"./glossary/Glossary\";\nimport Feedback from \"./feedback/Feedback\";\nimport Footer from \"./footer/Footer\";\nimport \"bulma\";\nimport \"./app.scss\";\n\nexport default class App extends React.Component {\n    render() {\n        return (\n            <div className=\"responsible-ai\">\n                <Router>\n                    <div className=\"router-content\">\n                        <Navbar />\n                        <Switch>\n                            <Route path=\"/fact\">\n                                <FACT />\n                            </Route>\n                            <Route path=\"/glossary\">\n                                <Glossary />\n                            </Route>\n                            <Route path=\"/feedback\">\n                                <Feedback />\n                            </Route>\n                            <Route path=\"/\">\n                                <Need />\n                            </Route>\n                        </Switch>\n                    </div>\n                </Router>\n                <Footer />\n            </div>\n        );\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}